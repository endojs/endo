#!/usr/bin/env zx

import { $ } from 'zx';
import fs from 'fs';
import path from 'path';
import yaml from 'js-yaml';

const interval = 'weekly';

// Initialize dependabot config
const config = {
  version: 2,
  updates: /** @type {Record<string, any>} */ ([]),
};

// Function to get all package.json files in the repo
async function getPackageDirectories() {
  const result =
    await $`find . -name 'package.json' -not -path '*/node_modules/*'`;
  return result.stdout.split('\n').filter(Boolean);
}

// Generate the dependabot.yml file
(async () => {
  const files = await getPackageDirectories();

  // Add each package directory to the updates list
  files.forEach(file => {
    const dir = path.dirname(file).replace(/^\.\//, ''); // Strip the './' from directory
    config.updates.push({
      'package-ecosystem': 'npm',
      directory: `/${dir}`,
      schedule: {
        interval,
      },
      'commit-message': {
        prefix: 'chore',
      },
      groups: {
        'all-minor-patch': {
          patterns: ['*'], // Group all minor and patch updates together
        },
      },
    });
  });

  // Optionally add GitHub Actions updates
  config.updates.push({
    'package-ecosystem': 'github-actions',
    directory: '/',
    schedule: {
      interval,
    },
    'commit-message': {
      prefix: 'chore',
    },
  });

  // Convert the config to YAML format
  const dependabotYaml = yaml.dump(config);

  // Comment to be added to the top of the dependabot.yml file
  const comment = `# This file was generated by a script.\n# You can find the script at /scripts/generate-dependabot.mjs\n\n`;

  // Write the dependabot.yml file with the comment at the top
  fs.writeFileSync('.github/dependabot.yml', comment + dependabotYaml);

  console.log('dependabot.yml has been generated.');
})();
