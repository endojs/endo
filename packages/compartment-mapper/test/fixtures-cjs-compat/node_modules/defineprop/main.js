const babeltypes = require('./example-babeltypes');
const curves = require('./example-elliptic');
const ethereum = require('./example-ethereum-util');

if (ethereum.isOk !== 1) {
  throw Error('Expected example-ethereum-util.js to export isOk');
}

if (!ethereum.__esModule) {
  throw Error('Expected example-ethereum-util.js to have a truthy __esModule flag, because typescript esModuleInterop depends on it being there.');
}
// elliptic expects this to work
if (
  !Object.prototype.hasOwnProperty.call(curves, 'p192') ||
  !Object.prototype.hasOwnProperty.call(curves, 'secp256k1')
) {
  throw Error('Expected example-elliptic.js to export p192 and secp256k1');
}

if (curves.p192.name !== 'p192' || curves.secp256k1.name !== 'secp256k1') {
  throw Error(
    `Expected example-elliptic.js exports to contain values: p192,secp256k1 got: ${curves.p192.name},${curves.secp256k1.name}`,
  );
}

if(!babeltypes.addComment || typeof babeltypes.addComment !== 'function') {
  throw Error('Expected example-babeltypes.js to export a function called addComment')
}