// ESLint reads this as a JSONC file so comments are allowed.
{
  "extends": [
    "airbnb-base",
    "plugin:prettier/recommended",
    "plugin:jsdoc/recommended",
    "plugin:@jessie.js/recommended",
    "plugin:@endo/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "processor": "@jessie.js/use-jessie",
  "env": {
    "es6": true,
    "node": false,
    "commonjs": false
  },
  "globals": {
    "assert": "readonly",
    "console": "readonly",
    "Compartment": "readonly",
    "StaticModuleRecord": "readonly",
    "TextDecoder": "readonly",
    "TextEncoder": "readonly",
    "URL": "readonly",
    "URLSearchParams": "readonly",

    // Allow what SES makes powerless, copied from its whitelist
    // *** Constructor Properties of the Global Object
    "Array": "readonly",
    "ArrayBuffer": "readonly",
    "BigInt": "readonly",
    "BigInt64Array": "readonly",
    "BigUint64Array": "readonly",
    "Boolean": "readonly",
    "DataView": "readonly",
    "EvalError": "readonly",
    "Float32Array": "readonly",
    "Float64Array": "readonly",
    "Int8Array": "readonly",
    "Int16Array": "readonly",
    "Int32Array": "readonly",
    "Map": "readonly",
    "Number": "readonly",
    "Object": "readonly",
    "Promise": "readonly",
    "Proxy": "readonly",
    "RangeError": "readonly",
    "ReferenceError": "readonly",
    "Set": "readonly",
    "String": "readonly",
    "Symbol": "readonly",
    "SyntaxError": "readonly",
    "TypeError": "readonly",
    "Uint8Array": "readonly",
    "Uint8ClampedArray": "readonly",
    "Uint16Array": "readonly",
    "Uint32Array": "readonly",
    "URIError": "readonly",
    "WeakMap": "readonly",
    "WeakSet": "readonly",
    // *** Other Properties of the Global Object
    "JSON": "readonly",
    "Reflect": "readonly",
    // *** Annex B
    "escape": "readonly",
    "unescape": "readonly",
    // ESNext
    "lockdown": "readonly",
    "harden": "readonly",
    "HandledPromise": "readonly"
  },
  "rules": {
    "quotes": [
      "error",
      "single",
      {
        "avoidEscape": true,
        "allowTemplateLiterals": true
      }
    ],
    "comma-dangle": ["error", "always-multiline"],
    "implicit-arrow-linebreak": "off",
    "function-paren-newline": "off",
    "arrow-parens": "off",
    "strict": "off",
    "prefer-destructuring": "off",
    "no-else-return": "off",
    "no-console": "off",
    "no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_"
      }
    ],
    "no-return-assign": "off",
    "no-param-reassign": "off",
    "no-restricted-syntax": ["off", "ForOfStatement"],
    "no-unused-expressions": "off",
    "no-loop-func": "off",
    "no-inner-declarations": "off",
    "guard-for-in": "error",
    "import/extensions": "off",
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": [
          "**/*.config.js",
          "**/*.config.*.js",
          "*test*/**/*.js",
          "demo*/**/*.js",
          "scripts/**/*.js"
        ]
      }
    ],
    "import/prefer-default-export": "off",
    "jsdoc/no-undefined-types": "off",
    "jsdoc/require-jsdoc": "off",
    "jsdoc/require-property-description": "off",
    "jsdoc/require-param-description": "off",
    "jsdoc/require-returns": "off",
    "jsdoc/require-returns-description": "off",
    "jsdoc/valid-types": "off"
  },
  "overrides": [
    {
      "files": ["**/*.{js,ts}"]
    },
    {
      "files": ["**/*.ts"],
      "rules": {
        "import/no-unresolved": "off",
        "no-unused-vars": "off"
      }
    }
  ],
  "ignorePatterns": [
    "**/output/**",
    "bundles/**",
    "dist/**",
    "test262/**",
    "ava*.config.js"
  ]
}
